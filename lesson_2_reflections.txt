What happens when you initialize a repository?
Why do you need to do it?

* It creates a subdirectory .git where my commits will bie sored and all the versions will be managed.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

* Files from the working directory are chosen for a commit by adding then to the staging area.
* The user has control what is going to be in the next commit.

How can you use the staging area to make sure you have one commit per logical change?

* You add only those files to the staging area which represent the logical change and commit this change.

What are some situations when branches would be helpful in keeping your history organized?
How would branches help?

* When developing alternative features or testing new things.
* A branch is a labelled commit which can checked out easily.

How do the diagrams help you visualize the branch structure?

* They show clearly if every commit has a parent, who this paren is and if there are any headless states.

What is the result of merging two branches together?
Why do we represent it in the diagram the way we do?

* The new master contains the commits of both branches.
* The merge point has two parents.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

* automatic: convenient, quick and mostly sufficient
* manual: If there is no way to decide which version to take, manual is better than a wrong automatic guess.